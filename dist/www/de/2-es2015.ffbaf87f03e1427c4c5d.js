/*               "Copyright 2020 Infosys Ltd.
               Use of this source code is governed by GPL v3 license that can be found in the LICENSE file or at https://opensource.org/licenses/GPL-3.0
               This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License version 3"*/
(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{BV1i:function(e,t,s){"use strict";s.d(t,"h",function(){return k}),s.d(t,"a",function(){return b}),s.d(t,"d",function(){return w}),s.d(t,"b",function(){return O}),s.d(t,"c",function(){return C}),s.d(t,"g",function(){return v}),s.d(t,"e",function(){return j}),s.d(t,"f",function(){return E}),s("GS7A");var i=s("KCVW"),n=s("dvZr"),o=s("hOhj"),r=s("8Y7J"),a=s("XNiG"),h=s("xgIS"),d=s("VRyK"),_=s("pLZG"),c=s("1G5W"),p=s("/uUt"),l=s("lJxs"),u=s("IzEk"),f=s("JX91"),g=s("Kj3r");function m(e){throw Error(`A drawer was already declared for 'position="${e}"'`)}const b=new r.InjectionToken("MAT_DRAWER_DEFAULT_AUTOSIZE",{providedIn:"root",factory:function(){return!1}});class w extends o.a{constructor(e,t,s,i,n){super(s,i,n),this._changeDetectorRef=e,this._container=t}ngAfterContentInit(){this._container._contentMarginChanges.subscribe(()=>{this._changeDetectorRef.markForCheck()})}}class O{constructor(e,t,s,i,o,d){this._elementRef=e,this._focusTrapFactory=t,this._focusMonitor=s,this._platform=i,this._ngZone=o,this._doc=d,this._elementFocusedBeforeDrawerWasOpened=null,this._enableAnimations=!1,this._position="start",this._mode="over",this._disableClose=!1,this._autoFocus=!0,this._animationStarted=new a.a,this._animationEnd=new a.a,this._animationState="void",this.openedChange=new r.EventEmitter(!0),this._destroyed=new a.a,this.onPositionChanged=new r.EventEmitter,this._modeChanged=new a.a,this._opened=!1,this.openedChange.subscribe(e=>{e?(this._doc&&(this._elementFocusedBeforeDrawerWasOpened=this._doc.activeElement),this._isFocusTrapEnabled&&this._focusTrap&&this._trapFocus()):this._restoreFocus()}),this._ngZone.runOutsideAngular(()=>{Object(h.a)(this._elementRef.nativeElement,"keydown").pipe(Object(_.a)(e=>e.keyCode===n.h&&!this.disableClose),Object(c.a)(this._destroyed)).subscribe(e=>this._ngZone.run(()=>{this.close(),e.stopPropagation()}))}),this._animationEnd.pipe(Object(p.a)((e,t)=>e.fromState===t.fromState&&e.toState===t.toState)).subscribe(e=>{const{fromState:t,toState:s}=e;(0===s.indexOf("open")&&"void"===t||"void"===s&&0===t.indexOf("open"))&&this.openedChange.emit(this._opened)})}get position(){return this._position}set position(e){(e="end"===e?"end":"start")!=this._position&&(this._position=e,this.onPositionChanged.emit())}get mode(){return this._mode}set mode(e){this._mode=e,this._modeChanged.next()}get disableClose(){return this._disableClose}set disableClose(e){this._disableClose=Object(i.c)(e)}get autoFocus(){return this._autoFocus}set autoFocus(e){this._autoFocus=Object(i.c)(e)}get _openedStream(){return this.openedChange.pipe(Object(_.a)(e=>e),Object(l.a)(()=>{}))}get openedStart(){return this._animationStarted.pipe(Object(_.a)(e=>e.fromState!==e.toState&&0===e.toState.indexOf("open")),Object(l.a)(()=>{}))}get _closedStream(){return this.openedChange.pipe(Object(_.a)(e=>!e),Object(l.a)(()=>{}))}get closedStart(){return this._animationStarted.pipe(Object(_.a)(e=>e.fromState!==e.toState&&"void"===e.toState),Object(l.a)(()=>{}))}get _isFocusTrapEnabled(){return this.opened&&"side"!==this.mode}_trapFocus(){this.autoFocus&&this._focusTrap.focusInitialElementWhenReady().then(e=>{e||"function"!=typeof this._elementRef.nativeElement.focus||this._elementRef.nativeElement.focus()})}_restoreFocus(){if(!this.autoFocus)return;const e=this._doc&&this._doc.activeElement;e&&this._elementRef.nativeElement.contains(e)&&(this._elementFocusedBeforeDrawerWasOpened instanceof HTMLElement?this._focusMonitor.focusVia(this._elementFocusedBeforeDrawerWasOpened,this._openedVia):this._elementRef.nativeElement.blur()),this._elementFocusedBeforeDrawerWasOpened=null,this._openedVia=null}ngAfterContentInit(){this._focusTrap=this._focusTrapFactory.create(this._elementRef.nativeElement),this._focusTrap.enabled=this._isFocusTrapEnabled}ngAfterContentChecked(){this._platform.isBrowser&&(this._enableAnimations=!0)}ngOnDestroy(){this._focusTrap&&this._focusTrap.destroy(),this._animationStarted.complete(),this._animationEnd.complete(),this._modeChanged.complete(),this._destroyed.next(),this._destroyed.complete()}get opened(){return this._opened}set opened(e){this.toggle(Object(i.c)(e))}open(e){return this.toggle(!0,e)}close(){return this.toggle(!1)}toggle(e=!this.opened,t="program"){return this._opened=e,e?(this._animationState=this._enableAnimations?"open":"open-instant",this._openedVia=t):(this._animationState="void",this._restoreFocus()),this._focusTrap&&(this._focusTrap.enabled=this._isFocusTrapEnabled),new Promise(e=>{this.openedChange.pipe(Object(u.a)(1)).subscribe(t=>e(t?"open":"close"))})}get _width(){return this._elementRef.nativeElement&&this._elementRef.nativeElement.offsetWidth||0}}class C{constructor(e,t,s,i,n=!1,o,h){this._dir=e,this._element=t,this._ngZone=s,this._changeDetectorRef=i,this._animationMode=o,this.backdropClick=new r.EventEmitter,this._destroyed=new a.a,this._doCheckSubject=new a.a,this._contentMargins={left:null,right:null},this._contentMarginChanges=new a.a,e&&e.change.pipe(Object(c.a)(this._destroyed)).subscribe(()=>{this._validateDrawers(),this._updateContentMargins()}),h&&h.change().pipe(Object(c.a)(this._destroyed)).subscribe(()=>this._updateContentMargins()),this._autosize=n}get start(){return this._start}get end(){return this._end}get autosize(){return this._autosize}set autosize(e){this._autosize=Object(i.c)(e)}get hasBackdrop(){return null==this._backdropOverride?!this._start||"side"!==this._start.mode||!this._end||"side"!==this._end.mode:this._backdropOverride}set hasBackdrop(e){this._backdropOverride=null==e?null:Object(i.c)(e)}get scrollable(){return this._userContent||this._content}ngAfterContentInit(){this._drawers.changes.pipe(Object(f.a)(null)).subscribe(()=>{this._validateDrawers(),this._drawers.forEach(e=>{this._watchDrawerToggle(e),this._watchDrawerPosition(e),this._watchDrawerMode(e)}),(!this._drawers.length||this._isDrawerOpen(this._start)||this._isDrawerOpen(this._end))&&this._updateContentMargins(),this._changeDetectorRef.markForCheck()}),this._doCheckSubject.pipe(Object(g.a)(10),Object(c.a)(this._destroyed)).subscribe(()=>this._updateContentMargins())}ngOnDestroy(){this._contentMarginChanges.complete(),this._doCheckSubject.complete(),this._destroyed.next(),this._destroyed.complete()}open(){this._drawers.forEach(e=>e.open())}close(){this._drawers.forEach(e=>e.close())}ngDoCheck(){this._autosize&&this._isPushed()&&this._ngZone.runOutsideAngular(()=>this._doCheckSubject.next())}_watchDrawerToggle(e){e._animationStarted.pipe(Object(_.a)(e=>e.fromState!==e.toState),Object(c.a)(this._drawers.changes)).subscribe(e=>{"open-instant"!==e.toState&&"NoopAnimations"!==this._animationMode&&this._element.nativeElement.classList.add("mat-drawer-transition"),this._updateContentMargins(),this._changeDetectorRef.markForCheck()}),"side"!==e.mode&&e.openedChange.pipe(Object(c.a)(this._drawers.changes)).subscribe(()=>this._setContainerClass(e.opened))}_watchDrawerPosition(e){e&&e.onPositionChanged.pipe(Object(c.a)(this._drawers.changes)).subscribe(()=>{this._ngZone.onMicrotaskEmpty.asObservable().pipe(Object(u.a)(1)).subscribe(()=>{this._validateDrawers()})})}_watchDrawerMode(e){e&&e._modeChanged.pipe(Object(c.a)(Object(d.a)(this._drawers.changes,this._destroyed))).subscribe(()=>{this._updateContentMargins(),this._changeDetectorRef.markForCheck()})}_setContainerClass(e){e?this._element.nativeElement.classList.add("mat-drawer-opened"):this._element.nativeElement.classList.remove("mat-drawer-opened")}_validateDrawers(){this._start=this._end=null,this._drawers.forEach(e=>{"end"==e.position?(null!=this._end&&m("end"),this._end=e):(null!=this._start&&m("start"),this._start=e)}),this._right=this._left=null,this._dir&&"rtl"===this._dir.value?(this._left=this._end,this._right=this._start):(this._left=this._start,this._right=this._end)}_isPushed(){return this._isDrawerOpen(this._start)&&"over"!=this._start.mode||this._isDrawerOpen(this._end)&&"over"!=this._end.mode}_onBackdropClicked(){this.backdropClick.emit(),this._closeModalDrawer()}_closeModalDrawer(){[this._start,this._end].filter(e=>e&&!e.disableClose&&this._canHaveBackdrop(e)).forEach(e=>e.close())}_isShowingBackdrop(){return this._isDrawerOpen(this._start)&&this._canHaveBackdrop(this._start)||this._isDrawerOpen(this._end)&&this._canHaveBackdrop(this._end)}_canHaveBackdrop(e){return"side"!==e.mode||!!this._backdropOverride}_isDrawerOpen(e){return null!=e&&e.opened}_updateContentMargins(){let e=0,t=0;if(this._left&&this._left.opened)if("side"==this._left.mode)e+=this._left._width;else if("push"==this._left.mode){let s=this._left._width;e+=s,t-=s}if(this._right&&this._right.opened)if("side"==this._right.mode)t+=this._right._width;else if("push"==this._right.mode){let s=this._right._width;t+=s,e-=s}t=t||null,(e=e||null)===this._contentMargins.left&&t===this._contentMargins.right||(this._contentMargins={left:e,right:t},this._ngZone.run(()=>this._contentMarginChanges.next(this._contentMargins)))}}class v extends w{constructor(e,t,s,i,n){super(e,t,s,i,n)}}class j extends O{constructor(){super(...arguments),this._fixedInViewport=!1,this._fixedTopGap=0,this._fixedBottomGap=0}get fixedInViewport(){return this._fixedInViewport}set fixedInViewport(e){this._fixedInViewport=Object(i.c)(e)}get fixedTopGap(){return this._fixedTopGap}set fixedTopGap(e){this._fixedTopGap=Object(i.f)(e)}get fixedBottomGap(){return this._fixedBottomGap}set fixedBottomGap(e){this._fixedBottomGap=Object(i.f)(e)}}class E extends C{}class k{}}}]);